#----------------------------------------------------------------------------------------------------------------------
# This workflow will execute to build and test the application on commits to development branches
# It can optionally deploy to the alpha environment/stage by prefixing your last commit comment with #alpha
#----------------------------------------------------------------------------------------------------------------------
name: Development Pipeline

on: 
  push:
    branches-ignore:
      - 'main'
      - 'beta'

jobs:

  # test-secrets-manager:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.ALPHA_AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.ALPHA_AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-2

  #     - name: Read secrets from AWS Secrets Manager into environment variables
  #       uses: aws-actions/aws-secretsmanager-get-secrets@v1
  #       with:
  #         secret-ids: |
  #           alpha-es
  #         parse-json-secrets: true

  #     - name: Check if env variable is set after fetching secrets
  #       run: |
  #         echo ESCLOUDID="$ES_ID" >> .env
  #         echo ESUSERNAME="$ES_USER" >> .env
  #         echo ESPASSWORD="$ES_PW" >> .env
  #         cat .env

  build:
    uses: ./.github/workflows/build_yarn.yml
    with:
      AWS-REGION: us-east-2
      SECRETS-TO-PULL: |
        ES,alpha-es
      ENV-SCRIPT: "ESCLOUDID=$ES_ID,ESUSERNAME=$ES_USER"
    secrets: 
      AWS_ACCESS_KEY_ID: ${{ secrets.ALPHA_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.ALPHA_AWS_SECRET_ACCESS_KEY }}    

  deploy-alpha:
    if: ${{ startsWith(github.event.head_commit.message, '#alpha') }}
    uses: ./.github/workflows/deploy_lambda.yml
    with:
      ENVIRONMENT-STAGE: alpha
      AWS-REGION: us-east-2    
    secrets: 
      AWS_ACCESS_KEY_ID: ${{ secrets.ALPHA_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.ALPHA_AWS_SECRET_ACCESS_KEY }}
    needs: [ build ]