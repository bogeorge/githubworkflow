#----------------------------------------------------------------------------------------------------------------------
# This workflow will execute to build and test the application on commits to development branches
# It can optionally deploy to the alpha environment by prefixing your last commit comment with #alpha
#----------------------------------------------------------------------------------------------------------------------
name: Development Pipeline

on: 
  push:
    branches-ignore:
      - 'main'
      - 'beta'
env:
  AWS_STACK_NAME: 'sample-application'

jobs:

  # Why Do this?  
  # Well because Github is lame and doesn't seem to let us simple use env: at the workflow level and pass 
  # those variables into our jobs for example using the with: option to pass them to workflows
  # env-setup:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     AWS_STACK_NAME: ${{ fromJSON(steps.env-export.outputs.result).AWS_STACK_NAME }}
  #   steps:
  #     - name: Clone ${{ github.repository }} repo to the runner
  #       uses: actions/checkout@v3 #checkout repo to github/workspace      

  #     - name:  Export Config to Outputs
  #       id: env-export
  #       uses: actions/github-script@v6
  #       with: 
  #         script: |
  #           const { readFileSync } = require('node:fs')
  #           const { resolve } = require('node:path')
  #           const { env } = require('node:process')
  #           const { parse } = JSON
  #           const config = parse(
  #             readFileSync(
  #               resolve(
  #                 env.GITHUB_WORKSPACE,
  #                 '.github/workflows/config.json'
  #               ),
  #               'utf8'
  #             )
  #           )

  #           console.log('config', config)

  #           return config
  # extract-config:
  #   uses: ./.github/workflows/extract_config.yml
  #   with: 
  #     config-file-path: '.github/workflows/config.json'
  
  # env-setup:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     AWS_STACK_NAME: ${{ fromJSON(needs.extract-config.JSON).AWS_STACK_NAME }}  
  #   needs: [ extract-config ]
  #   steps:
  #     - run: echo $ {{ needs.extract-config.outputs.JSON }}

  build:
     #uses: bogeorge/github_workflows/.github/workflows/build_yarn.yml@v2.0
     uses: ./.github/workflows/build_yarn.yml

  deploy-alpha:
    # if: ${{ startsWith(github.event.head_commit.message, '#alpha') }}
    #uses: bogeorge/github_workflows/.github/workflows/deploy_lambda.yml@v2.0
    uses: ./.github/workflows/deploy_lambda.yml
    with:
      app-environment: alpha
      aws-region: us-east-2
      #aws-stack-name: ${{needs.env-setup.outputs.AWS_STACK_NAME}}
      aws-stack-name: ${{ env.AWS_STACK_NAME }}
    secrets: inherit # pass all secrets
    needs: [ build ]