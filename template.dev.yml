# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >
  sample-application

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Layers:
      - !Ref RuntimeDependenciesLayer
    Runtime: nodejs18.x
    MemorySize: 128
    Timeout: 100
    Architectures:
    - arm64  

Parameters:
  LamdaFunctionName:
    Type: String
    Description: Name of the Lamda Function when deployed to AWS
  ESSecretName:
    Type: String
    Description: Name of the Secret that contains Elastic Search Information

Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: in src/handlers/example.ts
  MainFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile    
    Properties:
      FunctionName: 
        Ref: LamdaFunctionName
      # Role:
      #   Ref: !GetAtt
      #     - MainFunctionRole
      #     - Arn
      Handler: dist/lambda.handler
      Description: Sample APIs
      # resolve the secret dynamically from the secret manager
      # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html#dynamic-references-secretsmanager
      Environment:        
        Variables:
          ESPASSWORD: !Sub
            - '{{resolve:secretsmanager:${SecretName}:SecretString:pw}}'
            - SecretName: !Ref ESSecretName
          ESUSERNAME: !Sub
            - '{{resolve:secretsmanager:${SecretName}:SecretString:user}}'
            - SecretName: !Ref ESSecretName                    
          ESCLOUDID: !Sub
            - '{{resolve:secretsmanager:${SecretName}:SecretString:id}}'
            - SecretName: !Ref ESSecretName
      Events:
        RootEndpoint:
          Properties:
            Method: ANY
            Path: /
          Type: Api
        EverythingElse:
          Properties:
            Method: ANY
            Path: /{proxy+}
          Type: Api      

  # MainFunctionRole:
  #   Type: AWS::IAM:Role
  #   Properties:
  #     RoleName: 
  #       Ref: RoleName    
  #     ManagedPolicyArns:
  #       - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
  #     AssumeRolePolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #         - Action:
  #           - 'sts:AssumeRole'
  #           Effect: Allow
  #           Principal:
  #             Service:
  #               - lamda.amazonaws.com

  # Shared layer with Lambda runtime dependencies
  RuntimeDependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: makefile
    Properties:
      Description: Runtime dependencies for Lambdas
      ContentUri: ./
      CompatibleRuntimes:
        - nodejs18.x
      RetentionPolicy: Retain      