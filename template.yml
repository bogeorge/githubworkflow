# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >
  sample-application

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Layers:
      - !Ref RuntimeDependenciesLayer
    Runtime: nodejs18.x
    MemorySize: 128
    Timeout: 100
    Architectures:
    - arm64
    Environment:
      Variables:
        IS_OFFLINE: true
        NODE_DEV: DEV

Parameters:
  LamdaFunctionName:
    Type: String
    Description: Name of the Lamda Function when deployed to AWS
  ESSecretName:
    Type: String
    Description: Name of the Secret that contains Elastic Search Information
  TargetEnvironment:
    Type: String
    Description: Environment or Stage name this is being deployed to    

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: in src/handlers/example.ts
  MainFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      FunctionName: 
        Ref: LamdaFunctionName
      # resolve the secret dynamically from the secret manager
      # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html#dynamic-references-secretsmanager
      Environment:        
        Variables:
          ESPASSWORD: !Sub
            - '{{resolve:secretsmanager:${SecretName}:SecretString:pw}}'
            - SecretName: !Ref ESSecretName
          ESUSERNAME: !Sub
            - '{{resolve:secretsmanager:${SecretName}:SecretString:user}}'
            - SecretName: !Ref ESSecretName                    
          ESCLOUDID: !Sub
            - '{{resolve:secretsmanager:${SecretName}:SecretString:id}}'
            - SecretName: !Ref ESSecretName        
      Handler: dist/lambda.handler
      Description: Sample APIs
      Events:
        RootEndpoint:
          Properties:
            RestApiId: 
              - Fn::ImportValue: !Sub 'SharedAWSApiGatewayRestApiId-${TargetEnvironment}'
            Method: ANY
            Path: /
          Type: Api
        EverythingElse:
          Properties:
            RestApiId: 
              - Fn::ImportValue: !Sub 'SharedAWSApiGatewayRestApiId-${TargetEnvironment}'
            Method: ANY
            Path: /{proxy+}
          Type: Api

  # Shared layer with Lambda runtime dependencies
  RuntimeDependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: makefile
    Properties:
      Description: Runtime dependencies for Lambdas
      ContentUri: ./
      CompatibleRuntimes:
        - nodejs18.x
      RetentionPolicy: Retain

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"